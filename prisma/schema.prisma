// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String          @id @default(cuid())
  externalId         String          @unique
  attributes         Json?           @db.JsonB
  created_at         DateTime        @default(now())
  updated_at         DateTime        @updatedAt
  isOnProgressFinish Boolean         @default(false)
  currency           String?
  projectMember      ProjectMember[]
  Project            Project[]
  UserCurrency       UserCurrency[]
}

model Project {
  id                  String          @id @default(cuid())
  project_name        String
  project_description String
  project_image       String?
  project_target      String
  created_by          String
  created_at          DateTime        @default(now())
  updated_at          DateTime        @updatedAt
  ProjectMember       ProjectMember[]
  user                User            @relation(fields: [userId], references: [externalId])
  userId              String
}

model ProjectMember {
  id         String   @id @default(cuid())
  user_id    String
  project_id String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [user_id], references: [externalId])
  project    Project  @relation(fields: [project_id], references: [id])

  @@unique([user_id, project_id])
}

model Currency {
  id           String         @id @default(cuid())
  code         String         @unique
  name         String
  symbol       String
  UserCurrency UserCurrency[]
}

model UserCurrency {
  id         String   @id @default(cuid())
  userId     String
  currencyId String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [externalId])
  currency   Currency @relation(fields: [currencyId], references: [id])

  @@unique([userId, currencyId])
}
